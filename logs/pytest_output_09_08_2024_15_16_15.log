Logging is configured.
======================================================= test session starts ========================================================
platform win32 -- Python 3.12.4, pytest-8.3.2, pluggy-1.5.0
rootdir: C:\Users\150194\OneDrive - Arrow Electronics, Inc\Documents\Python\pytest-project
configfile: pytest.ini
plugins: allure-pytest-2.13.5, html-4.1.1, html-reporter-0.2.9, metadata-3.1.1
collected 14 items / 13 deselected / 1 selected

tests/test_flow.py::test_api_task_flow Creating task.

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-09 15:16:16 INFO Creating task.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "PUT /create-task HTTP/11" 200 200
{'task': {'user_id': 'Test User Jaymin', 'content': 'My test content with for Test User New.', 'is_done': False, 'created_time': 1723196777, 'task_id': 'task_4f553c5c546b439895586796d59d24f0', 'ttl': 1723283177}}
1.297252
200
Task created successfully.
2024-08-09 15:16:17 INFO Task created successfully.
Updating task.
2024-08-09 15:16:17 INFO Updating task.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "PUT /update-task HTTP/11" 200 59
{'updated_task_id': 'task_4f553c5c546b439895586796d59d24f0'}
1.415406
200
FAILED

============================================================= FAILURES =============================================================
________________________________________________________ test_api_task_flow ________________________________________________________

    @pytest.mark.flow
    def test_api_task_flow():
        Logger.info("Creating task.")
        response = HelperClass.create_task(json_payload[FrameworkConstant.CREATE_TASK_PAYLOAD])
        response_data = response.json()
        print(response_data)
        response_time = response.elapsed.total_seconds()
        print(response_time)
        task_id = response_data[FrameworkConstant.TASK][FrameworkConstant.TASK_ID]
        print(response.status_code)
    
        assert json_payload[FrameworkConstant.CREATE_TASK_PAYLOAD][FrameworkConstant.CONTENT] == response_data[FrameworkConstant.TASK][FrameworkConstant.CONTENT]
        assert FrameworkConstant.MAX_RESPONSE_TIME_CREATE_TASK >= response_time
        assert FrameworkConstant.STATUS_CODE_SUCCESS == response.status_code
        Logger.info("Task created successfully.")
    
        Logger.info("Updating task.")
        json_payload[FrameworkConstant.UPDATE_TASK_PAYLOAD][FrameworkConstant.TASK_ID] = task_id
        response = HelperClass.update_task(json_payload[FrameworkConstant.UPDATE_TASK_PAYLOAD])
        response_data = response.json()
        print(response_data)
        response_time = response.elapsed.total_seconds()
        print(response_time)
        status_code = response.status_code
        print(status_code)
    
        assert task_id == response_data[FrameworkConstant.UPDATED_TASK_ID]
>       assert FrameworkConstant.MAX_RESPONSE_TIME_UPDATE_TASK >= response_time
E       assert 1.3 >= 1.415406
E        +  where 1.3 = FrameworkConstant.MAX_RESPONSE_TIME_UPDATE_TASK

tests\test_flow.py:46: AssertionError
-------------------------------------------------------- Captured log call ---------------------------------------------------------
2024-08-09 15:16:16 INFO Creating task.
2024-08-09 15:16:17 INFO Task created successfully.
2024-08-09 15:16:17 INFO Updating task.
===================================================== short test summary info ======================================================
FAILED tests/test_flow.py::test_api_task_flow - assert 1.3 >= 1.415406
================================================= 1 failed, 13 deselected in 3.65s =================================================
