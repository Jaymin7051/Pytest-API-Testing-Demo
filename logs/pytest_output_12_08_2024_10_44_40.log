Logging is configured.
======================================================= test session starts ========================================================
platform win32 -- Python 3.12.4, pytest-8.3.2, pluggy-1.5.0
rootdir: C:\Users\150194\OneDrive - Arrow Electronics, Inc\Documents\Python\pytest-project
configfile: pytest.ini
plugins: allure-pytest-2.13.5, html-4.1.1, html-reporter-0.2.9, metadata-3.1.1
collected 14 items

tests/api/test_api_todo_pixegami.py::test_api_get getting response message.

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-12 10:44:41 INFO getting response message.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "GET / HTTP/11" 200 39
{'message': 'Hello World from Todo API'}
1.959019
200
Got response message successfully.
2024-08-12 10:44:43 INFO Got response message successfully.
PASSED
tests/api/test_api_todo_pixegami.py::test_api_put_create_task Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "PUT /create-task HTTP/11" 200 192
{'task': {'user_id': 'Test User Jaymin', 'content': 'My test content with json file.', 'is_done': False, 'created_time': 1723439685, 'task_id': 'task_ffc53f316c8a4634835a8db6718b89ff', 'ttl': 1723526085}}
3.015292
task_ffc53f316c8a4634835a8db6718b89ff
Created new task with id: task_ffc53f316c8a4634835a8db6718b89ff

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-12 10:44:46 INFO Created new task with id: task_ffc53f316c8a4634835a8db6718b89ff
200
FAILED
tests/api/test_api_todo_pixegami.py::test_api_put_create_task_invalid_data_type Creating task with invalid data type.

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-12 10:44:46 INFO Creating task with invalid data type.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "PUT /create-task HTTP/11" 422 111
{'detail': [{'loc': ['body', 'is_done'], 'msg': 'value could not be parsed to a boolean', 'type': 'type_error.bool'}]}
0.887193
value could not be parsed to a boolean
422
Task is not created as we have given data with invalid data type.
2024-08-12 10:44:47 INFO Task is not created as we have given data with invalid data type.
PASSED
tests/api/test_api_todo_pixegami.py::test_api_put_create_task_missing_required_field Creating task with missing one of required field.

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-12 10:44:47 INFO Creating task with missing one of required field.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "PUT /create-task HTTP/11" 422 91
{'detail': [{'loc': ['body', 'content'], 'msg': 'field required', 'type': 'value_error.missing'}]}
0.918066
field required
422
Task is not created as one of required field is missing.
2024-08-12 10:44:48 INFO Task is not created as one of required field is missing.
PASSED
tests/api/test_api_todo_pixegami.py::test_api_put_create_task_invalid_creationtime SKIPPED (unconditional skip)
tests/api/test_api_todo_pixegami.py::test_api_get_task_by_id task_ffc53f316c8a4634835a8db6718b89ff
Get task by task id: task_ffc53f316c8a4634835a8db6718b89ff

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-12 10:44:48 INFO Get task by task id: task_ffc53f316c8a4634835a8db6718b89ff
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "GET /get-task/task_ffc53f316c8a4634835a8db6718b89ff HTTP/11" 200 183
{'is_done': False, 'content': 'My test content with json file.', 'ttl': 1723526085, 'user_id': 'Test User Jaymin', 'task_id': 'task_ffc53f316c8a4634835a8db6718b89ff', 'created_time': 1723439685}
1.160174
200
Get task by task id is completed.
2024-08-12 10:44:49 INFO Get task by task id is completed.
PASSED
tests/api/test_api_todo_pixegami.py::test_api_get_task_by_id_not_exist Get task by task id: task_ffc53f316c8a4634835a8db6718b89ff67 which is not created.

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-12 10:44:49 INFO Get task by task id: task_ffc53f316c8a4634835a8db6718b89ff67 which is not created.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "GET /get-task/task_ffc53f316c8a4634835a8db6718b89ff67 HTTP/11" 404 67
{'detail': 'Task task_ffc53f316c8a4634835a8db6718b89ff67 not found'}
1.132787
404
Task with specified id, is not found.
2024-08-12 10:44:51 INFO Task with specified id, is not found.
PASSED
tests/api/test_api_todo_pixegami.py::test_api_get_task_by_user_id Get list of tasks associated with specified user id: Test User Jaymin

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-12 10:44:51 INFO Get list of tasks associated with specified user id: Test User Jaymin
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "GET /list-tasks/Test%20User%20Jaymin HTTP/11" 200 195
{'tasks': [{'is_done': False, 'content': 'My test content with json file.', 'ttl': 1723526085, 'user_id': 'Test User Jaymin', 'task_id': 'task_ffc53f316c8a4634835a8db6718b89ff', 'created_time': 1723439685}]}
1.324567
200
Get list of task with specified user id is completed.
2024-08-12 10:44:52 INFO Get list of task with specified user id is completed.
PASSED
tests/api/test_api_todo_pixegami.py::test_api_update_task Update task with id: task_ffc53f316c8a4634835a8db6718b89ff

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-12 10:44:52 INFO Update task with id: task_ffc53f316c8a4634835a8db6718b89ff
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "PUT /update-task HTTP/11" 200 59
{'updated_task_id': 'task_ffc53f316c8a4634835a8db6718b89ff'}
1.404881
200
Get task with id: task_ffc53f316c8a4634835a8db6718b89ff and validate if task is updated or not.
2024-08-12 10:44:53 INFO Get task with id: task_ffc53f316c8a4634835a8db6718b89ff and validate if task is updated or not.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "GET /get-task/task_ffc53f316c8a4634835a8db6718b89ff HTTP/11" 200 176
{'content': 'Updated content with json', 'is_done': True, 'ttl': 1723526085, 'user_id': 'Test User Jaymin', 'task_id': 'task_ffc53f316c8a4634835a8db6718b89ff', 'created_time': 1723439685}
1.306534
Task is updated with the new parameters.
2024-08-12 10:44:55 INFO Task is updated with the new parameters.
PASSED
tests/api/test_api_todo_pixegami.py::test_api_update_task_missing_required_field Update task with missing required field 'content'.

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-12 10:44:55 INFO Update task with missing required field 'content'.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "PUT /update-task HTTP/11" 422 91
{'detail': [{'loc': ['body', 'content'], 'msg': 'field required', 'type': 'value_error.missing'}]}
1.156
Validate task is updated or not as required field is missing.
2024-08-12 10:44:56 INFO Validate task is updated or not as required field is missing.
422
field required
Task is not updated as required field is missing.
2024-08-12 10:44:56 INFO Task is not updated as required field is missing.
PASSED
tests/api/test_api_todo_pixegami.py::test_api_update_task_creation_time SKIPPED (unconditional skip)
tests/api/test_api_todo_pixegami.py::test_api_del_task_by_id Delete task with id: task_51ca180c0d1a4686bf652fb00efc4e56

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-12 10:44:56 INFO Delete task with id: task_51ca180c0d1a4686bf652fb00efc4e56
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "DELETE /delete-task/task_51ca180c0d1a4686bf652fb00efc4e56 HTTP/11" 200 59
{'deleted_task_id': 'task_51ca180c0d1a4686bf652fb00efc4e56'}
1.215848
200
Get task and validate whether it is deleted or not.
2024-08-12 10:44:57 INFO Get task and validate whether it is deleted or not.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "GET /get-task/task_51ca180c0d1a4686bf652fb00efc4e56 HTTP/11" 404 65
{'detail': 'Task task_51ca180c0d1a4686bf652fb00efc4e56 not found'}
1.112061
404
Task deleted successfully
2024-08-12 10:44:58 INFO Task deleted successfully
PASSED
tests/api/test_api_todo_pixegami.py::test_api_del_task_by_missing_id Delete task without id.

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-12 10:44:58 INFO Delete task without id.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "DELETE /delete-task/ HTTP/11" 404 22
{'detail': 'Not Found'}
0.906082
404
Task not found.
2024-08-12 10:44:59 INFO Task not found.
PASSED
tests/test_flow.py::test_api_task_flow Creating task.

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-12 10:44:59 INFO Creating task.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "PUT /create-task HTTP/11" 200 200
{'task': {'user_id': 'Test User Jaymin', 'content': 'My test content with for Test User New.', 'is_done': False, 'created_time': 1723439700, 'task_id': 'task_7dc0f17a898548f2a69f4b83b5779839', 'ttl': 1723526100}}
1.05325
200
Task created successfully.
2024-08-12 10:45:00 INFO Task created successfully.
Updating task.
2024-08-12 10:45:00 INFO Updating task.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "PUT /update-task HTTP/11" 200 59
{'updated_task_id': 'task_7dc0f17a898548f2a69f4b83b5779839'}
1.075715
200
Get task with id: task_7dc0f17a898548f2a69f4b83b5779839 and validate if task is updated or not.
2024-08-12 10:45:01 INFO Get task with id: task_7dc0f17a898548f2a69f4b83b5779839 and validate if task is updated or not.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "GET /get-task/task_7dc0f17a898548f2a69f4b83b5779839 HTTP/11" 200 183
{'content': 'Updated content with json Jaymin', 'is_done': True, 'ttl': 1723526100, 'user_id': 'Test User Jaymin', 'task_id': 'task_7dc0f17a898548f2a69f4b83b5779839', 'created_time': 1723439700}
1.120027
Task updated successfully.
2024-08-12 10:45:02 INFO Task updated successfully.
Deleting task.
2024-08-12 10:45:02 INFO Deleting task.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "DELETE /delete-task/task_7dc0f17a898548f2a69f4b83b5779839 HTTP/11" 200 59
{'deleted_task_id': 'task_7dc0f17a898548f2a69f4b83b5779839'}
1.105062
200
Task deleted successfully.
2024-08-12 10:45:04 INFO Task deleted successfully.
Validating whether task is deleted or not.
2024-08-12 10:45:04 INFO Validating whether task is deleted or not.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "GET /get-task/task_7dc0f17a898548f2a69f4b83b5779839 HTTP/11" 404 65
{'detail': 'Task task_7dc0f17a898548f2a69f4b83b5779839 not found'}
1.142547
404
Task deleted and not found.
2024-08-12 10:45:05 INFO Task deleted and not found.
PASSED

============================================================= FAILURES =============================================================
_____________________________________________________ test_api_put_create_task _____________________________________________________

    @pytest.mark.smoke4
    def test_api_put_create_task():
        global task_id, invalid_task_id, user_id
        response = HelperClass.create_task(json_payload["create_task_payload"])
        response_data = response.json()
        print(response_data)
        response_time = response.elapsed.total_seconds()
        print(response_time)
    
        task_id = response_data[FrameworkConstant.TASK][FrameworkConstant.TASK_ID]
        invalid_task_id =  response_data[FrameworkConstant.TASK][FrameworkConstant.TASK_ID] + str(random.randint(1,100))
        user_id = response_data[FrameworkConstant.TASK][FrameworkConstant.USER_ID]
        print(task_id)
    
        Logger.info('Created new task with id: '+task_id)
        status_code = response.status_code
        print(status_code)
    
>       assert FrameworkConstant.MAX_RESPONSE_TIME_CREATE_TASK >= response_time
E       assert 1.9 >= 3.015292
E        +  where 1.9 = FrameworkConstant.MAX_RESPONSE_TIME_CREATE_TASK

tests\api\test_api_todo_pixegami.py:59: AssertionError
-------------------------------------------------------- Captured log call ---------------------------------------------------------
2024-08-12 10:44:46 INFO Created new task with id: task_ffc53f316c8a4634835a8db6718b89ff
===================================================== short test summary info ======================================================
FAILED tests/api/test_api_todo_pixegami.py::test_api_put_create_task - assert 1.9 >= 3.015292
============================================= 1 failed, 11 passed, 2 skipped in 25.09s =============================================
