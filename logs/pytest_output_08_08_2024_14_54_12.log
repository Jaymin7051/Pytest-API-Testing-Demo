Logging is configured.
======================================================= test session starts ========================================================
platform win32 -- Python 3.12.4, pytest-8.3.2, pluggy-1.5.0
rootdir: C:\Users\150194\OneDrive - Arrow Electronics, Inc\Documents\Python\pytest-project
configfile: pytest.ini
plugins: allure-pytest-2.13.5, html-4.1.1, html-reporter-0.2.9, metadata-3.1.1
collected 13 items

tests/api/test_api_todo_pixegami.py::test_api_get getting response message

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-08 14:54:12 INFO getting response message
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "GET / HTTP/11" 200 39
{'message': 'Hello World from Todo API'}
200
PASSED
tests/api/test_api_todo_pixegami.py::test_api_put_create_task Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "PUT /create-task HTTP/11" 200 187
{'task': {'user_id': 'Test User 1', 'content': 'My test content with json file.', 'is_done': False, 'created_time': 1723109054, 'task_id': 'task_ae8a6a5b8387438ea53578d65f1ca4e0', 'ttl': 1723195454}}
task_ae8a6a5b8387438ea53578d65f1ca4e0
Created new task with id: task_ae8a6a5b8387438ea53578d65f1ca4e0

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-08 14:54:15 INFO Created new task with id: task_ae8a6a5b8387438ea53578d65f1ca4e0
200
PASSED
tests/api/test_api_todo_pixegami.py::test_api_put_create_task_invalid_data_type Creating task with invalid data type.

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-08 14:54:15 INFO Creating task with invalid data type.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "PUT /create-task HTTP/11" 422 111
<Response [422]>
{'detail': [{'loc': ['body', 'is_done'], 'msg': 'value could not be parsed to a boolean', 'type': 'type_error.bool'}]}
value could not be parsed to a boolean
422
PASSED
tests/api/test_api_todo_pixegami.py::test_api_put_create_task_missing_required_field Creating task with missing one of required field.

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-08 14:54:16 INFO Creating task with missing one of required field.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "PUT /create-task HTTP/11" 422 91
<Response [422]>
{'detail': [{'loc': ['body', 'content'], 'msg': 'field required', 'type': 'value_error.missing'}]}
field required
422
PASSED
tests/api/test_api_todo_pixegami.py::test_api_put_create_task_invalid_creationtime SKIPPED (unconditional skip)
tests/api/test_api_todo_pixegami.py::test_api_get_task_by_id task_ae8a6a5b8387438ea53578d65f1ca4e0
Get task by task id: task_ae8a6a5b8387438ea53578d65f1ca4e0

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-08 14:54:17 INFO Get task by task id: task_ae8a6a5b8387438ea53578d65f1ca4e0
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "GET /get-task/task_ae8a6a5b8387438ea53578d65f1ca4e0 HTTP/11" 200 178
{'is_done': False, 'content': 'My test content with json file.', 'ttl': 1723195454, 'user_id': 'Test User 1', 'task_id': 'task_ae8a6a5b8387438ea53578d65f1ca4e0', 'created_time': 1723109054}
200
PASSED
tests/api/test_api_todo_pixegami.py::test_api_get_task_by_id_not_exist Get task by task id: 1000 which is not present.

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-08 14:54:18 INFO Get task by task id: 1000 which is not present.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "GET /get-task/1000 HTTP/11" 404 32
{'detail': 'Task 1000 not found'}
404
PASSED
tests/api/test_api_todo_pixegami.py::test_api_get_task_by_user_id Get task by user id: Test User 1

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-08 14:54:19 INFO Get task by user id: Test User 1
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "GET /list-tasks/Test%20User%201 HTTP/11" 200 1040
{'tasks': [{'is_done': False, 'content': 'My test content with json file.', 'ttl': 1723195454, 'user_id': 'Test User 1', 'task_id': 'task_ae8a6a5b8387438ea53578d65f1ca4e0', 'created_time': 1723109054}, {'is_done': False, 'content': 'My test content.', 'ttl': 1723120810, 'user_id': 'Test User 1', 'task_id': 'task_c937175d045e4564ae4e0eb2e33e28da', 'created_time': 1723034410}, {'is_done': False, 'content': 'My test content.', 'ttl': 1723117717, 'user_id': 'Test User 1', 'task_id': 'task_883165fcf2854406b47d17dcaf34ea55', 'created_time': 1723031317}, {'is_done': False, 'content': 'My test content with json file.', 'ttl': 1723117711, 'user_id': 'Test User 1', 'task_id': 'task_37bea58ba4764126bf703e9286961b3c', 'created_time': 1723031311}, {'is_done': False, 'content': 'My test content.', 'ttl': 1723117594, 'user_id': 'Test User 1', 'task_id': 'task_af356dfedc9a45b6bd47ce99055ae4fa', 'created_time': 1723031194}, {'is_done': False, 'content': 'My test content with json file.', 'ttl': 1723117589, 'user_id': 'Test User 1', 'task_id': 'task_c193cfca7e2c463ab74c0ccaba1a56db', 'created_time': 1723031189}]}
200
PASSED
tests/api/test_api_todo_pixegami.py::test_api_update_task Update task with id: task_ae8a6a5b8387438ea53578d65f1ca4e0

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-08 14:54:21 INFO Update task with id: task_ae8a6a5b8387438ea53578d65f1ca4e0
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "PUT /update-task HTTP/11" 200 31
{'updated_task_id': 'task_id 5'}
200
Get task with id: task_id 5 and validate update task
2024-08-08 14:54:22 INFO Get task with id: task_id 5 and validate update task
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "GET /get-task/task_id%205 HTTP/11" 200 76
{'content': 'Updated content with json', 'is_done': True, 'task_id': 'task_id 5'}
PASSED
tests/api/test_api_todo_pixegami.py::test_api_update_task_missing_required_field Update task with missing required field 'content'

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-08 14:54:23 INFO Update task with missing required field 'content'
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "PUT /update-task HTTP/11" 422 91
{'detail': [{'loc': ['body', 'content'], 'msg': 'field required', 'type': 'value_error.missing'}]}
422
field required
PASSED
tests/api/test_api_todo_pixegami.py::test_api_update_task_creation_time SKIPPED (unconditional skip)
tests/api/test_api_todo_pixegami.py::test_api_del_task_by_id Delete task with id: task_ae8a6a5b8387438ea53578d65f1ca4e0

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-08 14:54:24 INFO Delete task with id: task_ae8a6a5b8387438ea53578d65f1ca4e0
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "DELETE /delete-task/task_ae8a6a5b8387438ea53578d65f1ca4e0 HTTP/11" 200 59
{'deleted_task_id': 'task_ae8a6a5b8387438ea53578d65f1ca4e0'}
200
Validate task is deleted or not.
2024-08-08 14:54:26 INFO Validate task is deleted or not.
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "GET /get-task/task_ae8a6a5b8387438ea53578d65f1ca4e0 HTTP/11" 404 65
{'detail': 'Task task_ae8a6a5b8387438ea53578d65f1ca4e0 not found'}
404
PASSED
tests/api/test_api_todo_pixegami.py::test_api_del_task_by_missing_id Delete task without id

---------------------------------------------------------- live log call -----------------------------------------------------------
2024-08-08 14:54:27 INFO Delete task without id
Starting new HTTPS connection (1): todo.pixegami.io:443
https://todo.pixegami.io:443 "DELETE /delete-task/ HTTP/11" 404 22
{'detail': 'Not Found'}
404
FAILED

============================================================= FAILURES =============================================================
_________________________________________________ test_api_del_task_by_missing_id __________________________________________________

    def test_api_del_task_by_missing_id():
        Logger.info("Delete task without id")
        response = requests.delete("https://todo.pixegami.io/delete-task/")
        response_data = response.json()
        print(response_data)
    
        ststus_code = response.status_code
        print(ststus_code)
>       assert FrameworkConstant.STATUS_CODE_SUCCESS == ststus_code
E       assert 200 == 404
E        +  where 200 = FrameworkConstant.STATUS_CODE_SUCCESS

tests\api\test_api_todo_pixegami.py:223: AssertionError
-------------------------------------------------------- Captured log call ---------------------------------------------------------
2024-08-08 14:54:27 INFO Delete task without id
===================================================== short test summary info ======================================================
FAILED tests/api/test_api_todo_pixegami.py::test_api_del_task_by_missing_id - assert 200 == 404
============================================= 1 failed, 10 passed, 2 skipped in 16.02s =============================================
